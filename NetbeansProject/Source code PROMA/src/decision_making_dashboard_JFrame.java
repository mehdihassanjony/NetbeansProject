
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import java.io.*;
import java.awt.*;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * decision_making_dashboard_JFrame.java
 *
 * Created on Jan 23, 2012, 3:33:40 PM
 */
/**
 *
 * @author 9589693153
 */
public class decision_making_dashboard_JFrame extends javax.swing.JFrame {
Connection conn=null;
ResultSet rs = null;
PreparedStatement pst=null;
    /** Creates new form decision_making_dashboard_JFrame */
    public decision_making_dashboard_JFrame() {
        initComponents();
       
    }
 public void close() {
WindowEvent winClosingEvent = new WindowEvent( this, WindowEvent.WINDOW_CLOSING );
Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent( winClosingEvent );
}
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jToolBar1.setRollover(true);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(339, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(135, 135, 135)
                .addComponent(jButton1)
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(212, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Chart_JFrame s=new Chart_JFrame();
              s.setVisible(true);
              close();
                    double divide_torque=0,divide_rotationalspeed=0,divide_Temperature=0,divide_volumeflow=0,divide_pr1=0,divide_pr2=0,divide_pr3=0;
 

       
         try{
        
        String sql1=" SELECT Count(idpump) FROM pump  ";
    pst =conn.prepareStatement(sql1);
    rs=pst.executeQuery();
    
   // pst.setString(1, jTextField1.getText());
    String count_pr1=rs.getString("Count(idpump)");
      count_p1_intform =Integer.parseInt(count_pr1);
        
         }catch(Exception e)
    {
           JOptionPane.showMessageDialog(null, e);

    }  finally {
try{
  rs.close();
  }
  catch(Exception e) {
                   }
      }  
             try{
        
      
            // pst.setString(1, jTextField1.getText());
    XYSeries series =new XYSeries("Graph");
    for(int i=1;i<=count_p1_intform;i++){
       /*   String sql1=" SELECT pressure1 FROM pump where idpump ='"+i+"' ";
    pst =conn.prepareStatement(sql1);
    rs=pst.executeQuery();
      String  value_pr1 = rs.getString("pressure1");
      int value_pr1_intform =Integer.parseInt(value_pr1);
     if( value_pr1_intform<=10.0 &&  value_pr1_intform>=0.0){
       series.add(i, value_pr1_intform);
         counter1++;
        }*/
       
     int counter1 = 0,counter2 = 0,counter3 = 0,counter4 = 0,counter5 = 0,counter6 = 0,counter7 = 0;
     
       
                 String sql1=" SELECT * FROM pump where idpump ='"+i+"' ";

    pst =conn.prepareStatement(sql1);
    rs=pst.executeQuery();
    

         while(rs.next()){
             double pressure11 = rs.getDouble("pressure1");
             //System.out.println(pressure11);
             
             if(pressure11<=5 && pressure11>=0.0){
      
         counter1++;
        }
       
         double pressure22 = rs.getDouble("pressure2");
             //System.out.println(pressure22);
             
             if(pressure22<=10.0 && pressure22>=0.0){
      
         counter2++;
        }
             
              double pressure33 = rs.getDouble("pressure3");
             //System.out.println(pressure33);
             
             if(pressure33<=500 && pressure33>=0){
      
         counter3++;
        }
             
             double volumeflow = rs.getDouble("VolumeFlow");
             //System.out.println(volumeflow);
             
         if(volumeflow<=500 && volumeflow>=0){
      
         counter4++;
        }
             
         double Temperature1 = rs.getDouble("Temperature");
             //System.out.println(Temperature1);
             
         if(Temperature1<=60 && Temperature1>=0){
      
         counter5++;
        }
         
          double rotationalspeed1 = rs.getDouble("RotationalSpeed");
             //System.out.println(rotationalspeed1);
             
         if(rotationalspeed1<=6000){
      
         counter6++;
        }
           double torque1 = rs.getDouble("Torque");
            // System.out.println(torque1);
             
         if(torque1 <=200 && torque1>=0){
      
         counter7++;
        }
             
             
             
             
    }
         
 
 
    sum_availability  =counter1+counter2+counter3+counter4+counter5+counter6+counter7;
      total_availability =((sum_availability/7)*100);  
       int total_hello=(int)total_availability;
        // jProgressBar_availability_total.setValue(total_hello);
         String avail1 = Double.toString(total_availability);
     String sql="update pump set Remarks='"+total_availability+"'where idpump ='"+i+"' ";
             pst =conn.prepareStatement(sql);
    pst.execute();
   // JOptionPane.showMessageDialog(null, "Updated");
      series.add(i, total_availability);
    
     
       //System.out.println(total_availability);
        
    }
     XYSeriesCollection dataset =new XYSeriesCollection();
         dataset.addSeries(series);
         JFreeChart chart =ChartFactory.createXYLineChart("Availability Percentage Per Day", "Day", "Percentage(%)", dataset, PlotOrientation.VERTICAL, true,true,false);
        ChartFrame frame = new ChartFrame("Availability Percentage Per Day",chart);
        frame.pack();
        frame.setVisible(true);
    
         }catch(Exception e)
    {
           JOptionPane.showMessageDialog(null, e);

    }
        finally {
try{
  rs.close();
  }
  catch(Exception e) {
                   }
      }  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try                                      //try statement
     {   
           String a ="namaste ji kaise ho";
           Document document=new Document();
PdfWriter.getInstance(document,new FileOutputStream("tableTilePDF.pdf"));
document.open();
PdfPTable table=new PdfPTable(2);
PdfPCell cell = new PdfPCell (new Paragraph ("Rose India"));
cell.setColspan (8);
cell.setHorizontalAlignment (Element.ALIGN_CENTER);
//cell.setBackgroundColor(Color.BLUE);
cell.setPadding (10.0f);
table.addCell (cell);
cell = new PdfPCell (new Paragraph ("Name"));
cell.setHorizontalAlignment (Element.ALIGN_CENTER);
//cell.setBackgroundColor (new Color (255, 200, 0));
cell.setPadding (10.0f);
table.addCell (cell);
cell = new PdfPCell (new Paragraph ("Place"));
cell.setHorizontalAlignment (Element.ALIGN_CENTER);
//cell.setBackgroundColor (new Color (255, 200, 0));
cell.setPadding (10.0f);
table.addCell (cell);
table.addCell("NewsTrack");
table.addCell("Delhi");
table.addCell(a);
table.addCell("Delhi");

document.add(table);
document.close(); } catch (Exception e)                    //catch any exceptions here
       {
            JOptionPane.showMessageDialog(null,"Error");  //print the error
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(decision_making_dashboard_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(decision_making_dashboard_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(decision_making_dashboard_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(decision_making_dashboard_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new decision_making_dashboard_JFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
 private int count_p1_intform;
                  private double  divide1,divide2,divide3,divide4,divide5,divide6,divide7,total_availability,sum_availability;
                
}
